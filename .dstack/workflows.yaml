workflows:
  - name: setup-train
    help: directly setup Conda env and train
    provider: bash
    commands:
      - conda env create --file environment.yml
      - export PATH=/opt/conda/envs/mnist/bin:$PATH
      - python mnist/train.py trainer.enable_progress_bar=false
    artifacts:
      - path: lightning_logs

  - name: setup-conda
    help: setup Conda env as artifact for reuse by mounting
    provider: bash
    commands:
      - conda env create --file environment.yml
    artifacts:
      - path: /opt/conda/envs/mnist

  - name: test-conda
    help: Test Conda reuse
    provider: bash
    deps:
      - workflow: setup-conda
    commands:
      - conda env list
      - conda activate mnist
      - conda info
      - which python
      - python --version
      - python -c 'import torch; print(torch.__version__)'

  - name: download
    help: Download the MNIST dataset
    provider: bash
    deps:
      - workflow: setup-conda
    commands:
      - conda activate mnist
      - python mnist/prepare_data.py
    artifacts:
      - path: data

  - name: train
    help: Train an MNIST model
    deps:
      - workflow: setup-conda
      - workflow: download
    provider: bash
    commands:
      - conda activate mnist
      - python mnist/train.py trainer.enable_progress_bar=false
    artifacts:
      - path: lightning_logs

  # the following is for demo-only with pip

  - name: pip-download
    help: (pip demo-only) Download the MNIST dataset
    provider: bash
    commands:
      - pip install -r requirements.txt
      - python -m mnist.prepare_data
    artifacts:
      - path: data

  - name: pip-train
    help: (pip demo-only) Train an MNIST model
    deps:
      - workflow: pip-download
    provider: bash
    commands:
      - pip install -r requirements.txt
      - python -m mnist.train
    artifacts:
      - path: lightning_logs
